// Generated by Dagger (https://dagger.dev).
package com.romm.android;

import com.romm.android.data.SettingsRepository;
import com.romm.android.network.RomMApiService;
import com.romm.android.utils.DownloadManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<RomMApiService> apiServiceProvider;

  private final Provider<DownloadManager> downloadManagerProvider;

  private final Provider<SettingsRepository> settingsRepositoryProvider;

  public MainViewModel_Factory(Provider<RomMApiService> apiServiceProvider,
      Provider<DownloadManager> downloadManagerProvider,
      Provider<SettingsRepository> settingsRepositoryProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.downloadManagerProvider = downloadManagerProvider;
    this.settingsRepositoryProvider = settingsRepositoryProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(apiServiceProvider.get(), downloadManagerProvider.get(), settingsRepositoryProvider.get());
  }

  public static MainViewModel_Factory create(Provider<RomMApiService> apiServiceProvider,
      Provider<DownloadManager> downloadManagerProvider,
      Provider<SettingsRepository> settingsRepositoryProvider) {
    return new MainViewModel_Factory(apiServiceProvider, downloadManagerProvider, settingsRepositoryProvider);
  }

  public static MainViewModel newInstance(RomMApiService apiService,
      DownloadManager downloadManager, SettingsRepository settingsRepository) {
    return new MainViewModel(apiService, downloadManager, settingsRepository);
  }
}
